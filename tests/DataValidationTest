use PHPUnit\Framework\TestCase;

class DataValidationTest extends TestCase {
    public function testEmailValidation() {
        // Test valid email addresses
        $validEmails = [
            "user@example.com",
            "anotheruser@gmail.com",
            // Add more valid email addresses here
        ];

        foreach ($validEmails as $email) {
            $this->assertTrue(validateEmail($email), "Valid email '$email' should pass validation.");
        }

        // Test invalid email addresses
        $invalidEmails = [
            "invalid-email",      // Missing "@" symbol
            "user@.com",          // Missing domain name
            "user@example",       // Missing top-level domain
            // Add more invalid email addresses here
        ];

        foreach ($invalidEmails as $email) {
            $this->assertFalse(validateEmail($email), "Invalid email '$email' should fail validation.");
        }
    }

    public function testUsernameLengthValidation() {
        // Test valid username lengths
        $validUsernames = [
            "user123",
            "john_doe",
            // Add more valid usernames here
        ];

        foreach ($validUsernames as $username) {
            $this->assertTrue(validateUsernameLength($username), "Valid username '$username' should pass validation.");
        }

        // Test invalid username lengths
        $invalidUsernames = [
            "u",           // Too short
            "a_very_long_username_that_exceeds_the_maximum_length_limit",  // Too long
            // Add more invalid usernames here
        ];

        foreach ($invalidUsernames as $username) {
            $this->assertFalse(validateUsernameLength($username), "Invalid username '$username' should fail validation.");
        }
    }

   
}
